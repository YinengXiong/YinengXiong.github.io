<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yineng Xiong</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 18 Aug 2019 21:23:56 +0800</pubDate>
    <lastBuildDate>Sun, 18 Aug 2019 21:23:56 +0800</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Style Transfer: Part 1</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;今天不想学习，继续补档&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;固定内容固定风格的风格迁移&quot;&gt;固定内容固定风格的风格迁移&lt;/h2&gt;
&lt;p&gt;固定内容固定风格的风格迁移是最早的风格迁移方法, 把图片当作可以训练的变量, 通过优化图片来降低与内容图片的 &lt;code class=&quot;highlighter-rouge&quot;&gt;内容差异&lt;/code&gt; 和 与风格图片的 &lt;code class=&quot;highlighter-rouge&quot;&gt;风格差异&lt;/code&gt;, 经过迭代后生成的图片会有与内容图片一致的内容, 与风格图片一致的风格.&lt;/p&gt;

&lt;h2 id=&quot;内容损失与风格损失&quot;&gt;内容损失与风格损失&lt;/h2&gt;
&lt;p&gt;经典的风格迁移都是通过 &lt;strong&gt;VGG&lt;/strong&gt; 来衡量 &lt;strong&gt;Content Loss&lt;/strong&gt; 和 &lt;strong&gt;Style Loss&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;图片经过一个 &lt;strong&gt;VGG16&lt;/strong&gt; 的编码器, 每个 &lt;code class=&quot;highlighter-rouge&quot;&gt;MaxPooling&lt;/code&gt; 前的 Activation Map 作为 &lt;strong&gt;Style Loss&lt;/strong&gt;, 特定一层的 Activation Map 作为 &lt;strong&gt;ConTent Loss&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../Img/2019-08-17/st2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;VGG16&lt;/code&gt; 的结构&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vgg16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pretrained&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code class=&quot;language-Shell&quot;&gt;Sequential(
  (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (1): ReLU(inplace)
  (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (3): ReLU(inplace)
  (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (5): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (6): ReLU(inplace)
  (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (8): ReLU(inplace)
  (9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (10): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (11): ReLU(inplace)
  (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (13): ReLU(inplace)
  (14): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (15): ReLU(inplace)
  (16): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (17): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (18): ReLU(inplace)
  (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (20): ReLU(inplace)
  (21): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (22): ReLU(inplace)
  (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (25): ReLU(inplace)
  (26): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (27): ReLU(inplace)
  (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (29): ReLU(inplace)
  (30): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也就是说, 把编号 &lt;code class=&quot;highlighter-rouge&quot;&gt;3, 8, 15, 22&lt;/code&gt; 的 &lt;strong&gt;Feature Map&lt;/strong&gt; 拿出来做 &lt;strong&gt;Style Loss&lt;/strong&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;15&lt;/code&gt; 的 &lt;strong&gt;Feature Map&lt;/strong&gt; 做 &lt;strong&gt;Content Loss&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;这里用 &lt;strong&gt;Gram&lt;/strong&gt; 矩阵衡量输入图像与风格图像的内容差异, 根据生成图像和风格图像在 &lt;strong&gt;VGG16&lt;/strong&gt; 不同阶段的特征图的 &lt;strong&gt;Gram&lt;/strong&gt; 矩阵之间的均方误差来优化生成图像和风格图像之间的风格差异.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;def gram_matrix(y):
    (b, ch, h, w) = y.size()
    features = y.view(b, ch, w * h)
    features_t = features.transpose(1, 2)
    gram = features.bmm(features_t) / (ch * h * w)
    return gram
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_wave.png&quot; alt=&quot;wave&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_picasso.png&quot; alt=&quot;picasso&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_mountainprism.png&quot; alt=&quot;mountainprism&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_scream.png&quot; alt=&quot;scream&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_vangogh.png&quot; alt=&quot;vangogh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-17/concat_edtaonisl.png&quot; alt=&quot;edtaonisl&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;下期预告&quot;&gt;下期预告&lt;/h3&gt;
&lt;p&gt;CityScapes&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/17/style-transfer-1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/17/style-transfer-1/</guid>
        
        <category>Deep Learning</category>
        
        <category>Style Transfer</category>
        
        
      </item>
    
      <item>
        <title>CPD for Salient Object Detection</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;很久没有写 Blog 了, 今天写一波&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;salient-object-detection&quot;&gt;Salient Object Detection&lt;/h2&gt;

&lt;p&gt;显著性检测的定义是检测出一张图片中最显著的物体, 其实就可以当作二分类分割问题. 看了几篇paper之后发现用到的网络其实也和语义分割的很相似, 都是&lt;code class=&quot;highlighter-rouge&quot;&gt;Encoder-Decoder&lt;/code&gt; 结构, 也有类似 &lt;code class=&quot;highlighter-rouge&quot;&gt;Attention&lt;/code&gt;、 &lt;code class=&quot;highlighter-rouge&quot;&gt;ASPP&lt;/code&gt; 这种 module, 于是拿来一篇 &lt;code class=&quot;highlighter-rouge&quot;&gt;CVPR 2019&lt;/code&gt; 的 Paper, 叫 &lt;a href=&quot;https://arxiv.org/abs/1904.08739&quot;&gt;Cascaded Partial Decoder&lt;/a&gt;. 文章宣称的是快速 SOD, &lt;code class=&quot;highlighter-rouge&quot;&gt;VGG Backbone&lt;/code&gt; 的速度可以达到 &lt;strong&gt;105 FPS&lt;/strong&gt;, 算是一个比较快的显著性网络。&lt;/p&gt;

&lt;h2 id=&quot;why-so-fast&quot;&gt;Why So Fast？&lt;/h2&gt;
&lt;p&gt;显著性检测其实和语义分割问题一样, 都依赖于网络提供精确的物体边界. 文章做了一个实验, 拿一张 Image 过一个VGG, 输出 &lt;code class=&quot;highlighter-rouge&quot;&gt;Activation Map&lt;/code&gt;, 发现网络的中间层依然可以保留比较准确的边缘信息, 那这样这些浅层的、分辨率高、抽象程度低的 feature 就不需要在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Decoder&lt;/code&gt; 端使用, 这样就可以节省计算量。&lt;/p&gt;

&lt;p&gt;然后在网络的设计上, 作者通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;Backbone&lt;/code&gt; 上拉出两个分支, 分别接上 &lt;code class=&quot;highlighter-rouge&quot;&gt;Partial Decoder&lt;/code&gt;, 第一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;Partial Decoder&lt;/code&gt; 得到初始的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Saliency Map&lt;/code&gt;, 通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;HAM&lt;/code&gt; 生成更精细的第二个 &lt;code class=&quot;highlighter-rouge&quot;&gt;Saliency Map&lt;/code&gt;, 其实第一个可以看成生成的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Attention&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;为了加速, 每个&lt;code class=&quot;highlighter-rouge&quot;&gt;Decoder&lt;/code&gt;分支都先用 &lt;code class=&quot;highlighter-rouge&quot;&gt;1X1卷积&lt;/code&gt; 将通道数降到 &lt;code class=&quot;highlighter-rouge&quot;&gt;32&lt;/code&gt;, 然后文章里的 &lt;code class=&quot;highlighter-rouge&quot;&gt;RFB&lt;/code&gt; 多尺度, 其实就是类似 &lt;code class=&quot;highlighter-rouge&quot;&gt;Inception&lt;/code&gt; 的东西, 为了节省参数和降低计算量用到了把 &lt;code class=&quot;highlighter-rouge&quot;&gt;5X5卷积&lt;/code&gt; 替换为 &lt;code class=&quot;highlighter-rouge&quot;&gt;1X5&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;5X1&lt;/code&gt; 的操作, 最后再带上空洞卷积提升感受野.&lt;/p&gt;

&lt;p&gt;训练的时候是同时监督两个分支的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Saliency Map&lt;/code&gt;，注意力分支为检测分支提供精确的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Attention Map&lt;/code&gt;, 检测分支反过来有助于注意力分支集中于显著对象.&lt;/p&gt;

&lt;h2 id=&quot;training&quot;&gt;Training&lt;/h2&gt;
&lt;p&gt;文章训练用的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;DUTS-TR&lt;/code&gt;, 也是最常用的显著性数据集，测试用的也是最常见的 &lt;code class=&quot;highlighter-rouge&quot;&gt;ECSSD + HKU-IS + DUT-OMRON + DUTS-TE + PASCAL-S&lt;/code&gt; 的组合. 先复现一下原paper的精度, &lt;strong&gt;Loss&lt;/strong&gt; 就只放 &lt;strong&gt;MAE&lt;/strong&gt; 的&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Model&lt;br /&gt;BackBone&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Train&lt;br /&gt;Data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUT&lt;br /&gt;OMRON&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUTS-TE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ECSSD&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;HKU-IS&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;PASCAL-S&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SOD&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CPD(paper)&lt;br /&gt;ResNet&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DUTS-TE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.056&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.043&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.037&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.034&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.072&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CPD(复现)&lt;br /&gt;ResNet&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DUTS-TE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0549&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0433&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0429&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0336&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0756&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1092&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;好像还行.&lt;/p&gt;

&lt;p&gt;但是又不发paper, 为啥不多拿几个数据集放在一起训一波？&lt;/p&gt;

&lt;p&gt;收集了一波显著性开源数据集, &lt;strong&gt;DUTS-TE + MSRA-B + HKU + NJU2K + MSRA10K&lt;/strong&gt;,操作起来&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Model&lt;br /&gt;BackBone&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Train&lt;br /&gt;Data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUT&lt;br /&gt;OMRON&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUTS-TE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ECSSD&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;HKU-IS&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;PASCAL-S&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SOD&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CPD&lt;br /&gt;ResNet&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DUTS+MSRA-B+&lt;br /&gt;HKU+NJU2K+MSRA10K&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0508&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0411&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.037&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0265&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0675&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1032&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;有一些提升&lt;/p&gt;

&lt;p&gt;那再快一点？把backbone改成 &lt;strong&gt;MobileNetV2&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Model&lt;br /&gt;BackBone&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Train&lt;br /&gt;Data&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUT&lt;br /&gt;OMRON&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;DUTS-TE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ECSSD&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;HKU-IS&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;PASCAL-S&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;SOD&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;CPD&lt;br /&gt;MobileNetV2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;DUTS+MSRA-B+&lt;br /&gt;HKU+NJU2K+MSRA10K&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0545&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0485&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0389&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0289&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.0702&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.1051&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;性能稍微差了一点, 正常&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;看一下一些测试集上的效果 (卡了threshold的结果)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/1_rgb.jpg&quot; alt=&quot;1_rgb&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/1_pred.png&quot; alt=&quot;1_pred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/2_rgb.jpg&quot; alt=&quot;2_rgb&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/2_pred.png&quot; alt=&quot;2_pred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再看看破烂自然图像(小姐姐)的结果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/3_rgb.jpg&quot; alt=&quot;3_rgb&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/3_pred.png&quot; alt=&quot;3_pred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/salient_1.jpg&quot; alt=&quot;4_rgb&quot; /&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/2019-08-15/4_pred.png&quot; alt=&quot;4_pred&quot; /&gt;&lt;/p&gt;

&lt;p&gt;感觉效果还不错?&lt;/p&gt;

&lt;h3 id=&quot;暑假学校还要干活还让不让找工作了滑稽&quot;&gt;暑假学校还要干活？还让不让找工作了(滑稽&lt;/h3&gt;
&lt;p&gt;好气啊！&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Aug 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/08/15/cpd/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/08/15/cpd/</guid>
        
        <category>Deep Learning</category>
        
        <category>Salient Object Detection</category>
        
        
      </item>
    
      <item>
        <title>My First Kaggle Competition</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;First Step&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;capstone-project-results&quot;&gt;Capstone Project Results&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.kaggle.com/c/dogs-vs-cats-redux-kernels-edition&quot;&gt;Dogs_VS_Cats&lt;/a&gt;&lt;/strong&gt; On &lt;strong&gt;&lt;a href=&quot;https://www.kaggle.com/&quot;&gt;Kaggle&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Base Model/Model&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;LogLoss&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Ranking&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inception V3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.04095&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Xception&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.04101&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&amp;lt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Inception ResNet V2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.03796&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Merge&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.03582&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/YinengXiong/YinengXiong.github.io/master/img/kaggle.png&quot; alt=&quot;Result&quot; /&gt;&lt;/p&gt;

&lt;p&gt;虽然啊,比赛在做这个项目的时候已经结束了,但是还是可以 &lt;strong&gt;Late Submission&lt;/strong&gt;, 结果可以排在当时的第7&lt;/p&gt;

&lt;h2 id=&quot;又要开学了&quot;&gt;又要开学了&lt;/h2&gt;
&lt;p&gt;好气啊！&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Mar 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/03/01/graduate-mlnd/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/03/01/graduate-mlnd/</guid>
        
        <category>Deep Learning</category>
        
        
      </item>
    
      <item>
        <title>Build Personal Blog with Github &amp; Jekyll</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;哇!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;requirement&quot;&gt;Requirement&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Github&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github Pages&lt;/a&gt; is where people build software. After registration,  &lt;a href=&quot;https://github.com/new&quot;&gt;create a new repository&lt;/a&gt;. The name of repo should corresponding with Gighub account, like &lt;code class=&quot;highlighter-rouge&quot;&gt;***.github.io&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; is a website generator that’s designed for building minimal, static blogs to be hosted on Github Pages. &lt;a href=&quot;http://jekyll.com.cn/&quot;&gt;Jekyll中文网站&lt;/a&gt;&lt;/p&gt;
    &lt;h2 id=&quot;choose-your-favourite-theme&quot;&gt;Choose your favourite theme&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;Jekyll Themes&lt;/a&gt;&lt;br /&gt;
Mine is &lt;a href=&quot;https://github.com/huxpro/huxpro.github.io/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;domain-registration&quot;&gt;Domain Registration&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://wanwang.aliyun.com/&quot;&gt;万网注册域名&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to the root of your blog’s repo and edit the &lt;strong&gt;CNAME&lt;/strong&gt; file to include your domain name (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;yinengxiong.cn&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to your domain name registrar and add &lt;strong&gt;CNAME DNS&lt;/strong&gt; record pointing your domian to Github Pages&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;write-posts&quot;&gt;Write Posts&lt;/h2&gt;

&lt;p&gt;Feel free to checkout &lt;strong&gt;Markdown&lt;/strong&gt; files in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;front-matter&lt;/strong&gt; of a post should like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Shell&quot;&gt;---
layout:     post
title:      &quot;Hello&quot;
subtitle:   &quot;Hello&quot;
date:       2017-08-22 14:00:00
author:     &quot;Yineng Xiong&quot;
header-img: &quot;img/your-mum.jpg&quot;
tags:
    - Alibaba
---
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;submit&quot;&gt;Submit&lt;/h2&gt;

&lt;p&gt;Just &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;current-function&quot;&gt;Current function&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Comment (Using &lt;a href=&quot;http://www.disqus.com/&quot;&gt;Disqus&lt;/a&gt;, 需要翻墙)&lt;/li&gt;
  &lt;li&gt;Tags search&lt;/li&gt;
  &lt;li&gt;Baidu Analytics&lt;/li&gt;
  &lt;li&gt;Google Analytics&lt;/li&gt;
  &lt;li&gt;Links&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/YinengXiong&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.zhihu.com/people/YinengXiong&quot;&gt;知乎&lt;/a&gt;, &lt;a href=&quot;http://weibo.com/yinengxiong&quot;&gt;Weibo&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/yinengxiong&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://github.com/YinengXiong&quot;&gt;Github&lt;/a&gt; pages&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;finally&quot;&gt;Finally&lt;/h2&gt;
&lt;p&gt;Aha!&lt;/p&gt;
</description>
        <pubDate>Wed, 02 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/02/build-blog/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/02/build-blog/</guid>
        
        <category>Github Pages</category>
        
        
      </item>
    
  </channel>
</rss>
